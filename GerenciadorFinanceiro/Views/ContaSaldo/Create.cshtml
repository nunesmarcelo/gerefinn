@model GerenciadorFinanceiro.Models.contasaldo

@{
                /**/

                ViewBag.Title = "Contasaldo";
                ViewBag.TituloPagina = "Cadastro de Conta";
                Layout = null;
}


<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Cadastrar  Conta  </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        @using (Html.BeginForm("Create", "Contasaldo", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <fieldset class="scheduler-border  mt-4 col-12  ">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group row">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 requerido" })
                <div class="col-md-7">

                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", @required = true, @style = "text-transform: uppercase", @id = "nome" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.banco, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12" })
                <div class="col-md-7">

                    @Html.EditorFor(model => model.banco, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase", @id = "banco" } })
                    @Html.ValidationMessageFor(model => model.banco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.saldo, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 requerido" })
                <div class="col-md-7">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text" style="width:80px !important;"> R$</div>
                            @Html.EditorFor(model => model.saldo, new { htmlAttributes = new { @class = "form-control", @required = true, @style = "text-transform: uppercase", @id = "valor" } })
                            @Html.ValidationMessageFor(model => model.saldo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="form-group row">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 requerido" })
            <div class="col-md-7">

                <div class="checkbox">
                    <label class="quadrado">
                        @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase", @id = "status" } })
                        <span class="checkmark"></span>
                    </label>
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

            <div class="form-group row">
                @Html.LabelFor(model => model.agencia, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12" })
                <div class="col-md-7">

                    @Html.EditorFor(model => model.agencia, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase", @id = "agencia" } })
                    @Html.ValidationMessageFor(model => model.agencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.conta, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
                <div class="col-md-7">

                    @Html.EditorFor(model => model.conta, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase", @id = "conta" } })
                    @Html.ValidationMessageFor(model => model.conta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.titular, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
                <div class="col-md-7">

                    @Html.EditorFor(model => model.titular, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase", @id = "titular" } })
                    @Html.ValidationMessageFor(model => model.titular, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 requerido" })
                <div class="col-md-7">

                    @Html.DropDownListFor(model => model.tipo, new SelectList(ViewBag.Lista, "Value", "Text", "Selecione"), new { @class = "form-control ", @style = "text-transform: uppercase" })
                    @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
                </div>
            </div>

        </fieldset>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancelar</button>
                <button type="submit" value="Save" class="btn btn-outline-success">Salvar</button>
            </div>
        }
    </div>
</div>


<script type="text/javascript" src="~/Scripts/funcoes.js"></script>


