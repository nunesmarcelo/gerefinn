@model GerenciadorFinanceiro.Models.cooperativa
@{
    ViewData["Title"] = "Sistema Catadores - Cadastro de Cooperativa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    // busca endereco automaticamente
    function retira_acentos(palavra) {
        com_acento = 'áàãâäéèêëíìîïóòõôöúùûüçÁÀÃÂÄÉÈÊËÍÌÎÏÓÒÕÖÔÚÙÛÜÇ';
        sem_acento = 'aaaaaeeeeiiiiooooouuuucAAAAAEEEEIIIIOOOOOUUUUC';
        nova = '';
        for (i = 0; i < palavra.length; i++) {
            if (com_acento.search(palavra.substr(i, 1)) >= 0) {
                nova += sem_acento.substr(com_acento.search(palavra.substr(i, 1)), 1);
            }
            else {
                nova += palavra.substr(i, 1);
            }
        }
        return nova.toUpperCase();
    }

    function getEndereco() {
        if ($.trim($("#CEP").val()) != "") {

            var cep_code = $("#CEP").val();
            if (cep_code.length <= 0) return;
            $.get("http://apps.widenet.com.br/busca-cep/api/cep.json", { code: cep_code },
                function (result) {
                    if (result.status != 1) {
                        alert(result.message || "Houve um erro desconhecido");
                        return;
                    }
                    $("#Cidade").val(retira_acentos(unescape(result.city)));
                    $("#Bairro").val(unescape(result.district));
                    $("#Rua").val(unescape(result.address));
                    $("#Estado").val(unescape(result.state));
                });
        }
    }
</script>

<style>
    .col-lg-10 {
        margin-bottom: 10px;
    }

    .well {
        margin-bottom: 40px;
    }
</style>

<h2>Cadastro de Cooperativa</h2>


@using (Html.BeginForm())
{
    <div class="panel panel-primary">
        <div class="panel panel-heading">
            <h3 class="panel-title">Dados da Cooperativa</h3>
        </div>
        <div class="panel-body" id="dadosusuario">
            <fieldset class="scheduler-border">

                <div class="form-group">
                    @Html.LabelFor(model => model.nome, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.nome, new { @class = "form-control", @placeholder = "Nome da Cooperativa", @style = "text-transform:uppercase;" })
                        @Html.ValidationMessageFor(model => model.nome, null, new { @style = "color: #f00" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cnpj, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.cnpj, new { @id = "CNPJ", @class = "form-control", @placeholder = "__.___.___/____.__" })
                        @Html.ValidationMessageFor(model => model.cnpj, null, new { @style = "color: #f00" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.email, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.email, new { @type = "email", @class = "form-control", @placeholder = "email@email.com", @style = "text-transform:uppercase;" })
                        @Html.ValidationMessageFor(model => model.email, null, new { @style = "color: #f00", @type = "email" })
                        <div id="resultEmail" style="color: red;"></div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.telefone1, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.telefone1, new { @id = "Telefone", @class = "form-control", @placeholder = "(xx) _____-____" })
                        @Html.ValidationMessageFor(model => model.telefone1, null, new { @style = "color: #f00", @type = "tel" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.telefone2, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.telefone2, new { @id = "Telefone2", @class = "form-control", @placeholder = "(xx) _____-____" })
                        @Html.ValidationMessageFor(model => model.telefone2, null, new { @style = "color: #f00", @type = "tel" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.responsavel, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.responsavel, new { @class = "form-control", @placeholder = "Nome do responsável", @style = "text-transform:uppercase;" })
                        @Html.ValidationMessageFor(model => model.responsavel, null, new { @style = "color: #f00" })
                    </div>
                </div>

            </fieldset>

            <div class="well well-sm" style="position: relative; top: 20px;">
                <div class="panel panel-heading">
                    <h3 class="panel-title">Endereço</h3>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cep, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.cep, new { @id = "CEP", @class = "form-control pt-3", @placeholder = "CEP", @onblur = "getEndereco()" })
                            @Html.ValidationMessageFor(model => model.cep, null, new { @style = "color: #f00" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.rua, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.rua, new { @id = "Rua", @class = "form-control", @placeholder = "RUA", @style = "text-transform: uppercase;" })
                            @Html.ValidationMessageFor(model => model.rua, null, new { @style = "color: #f00" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.numero, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.numero, new { @id = "Numero", @class = "form-control", @placeholder = "NÚMERO", @style = "text-transform: uppercase;" })
                            @Html.ValidationMessageFor(model => model.numero, null, new { @style = "color: #f00" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.bairro, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.bairro, new { @id = "Bairro", @class = "form-control", @placeholder = "Bairro", @style = "text-transform: uppercase;" })
                            @Html.ValidationMessageFor(model => model.bairro, null, new { @style = "color: #f00" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.cidade, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.cidade, new { @id = "Cidade", @class = "form-control", @placeholder = "Cidade", @style = "text-transform: uppercase;" })
                            @Html.ValidationMessageFor(model => model.cidade, null, new { @style = "color: #f00" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.estado, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.estado, new { @id = "Estado" , @class = "form-control", @placeholder = "Estado", @style = "text-transform: uppercase;" })
                            @Html.ValidationMessageFor(model => model.estado, null, new { @style = "color: #f00" })
                        </div>
                    </div>

                </div>
            </div>

            @*<div class="well well-sm" style="margin-top: 5px">
                    <div class="panel panel-heading">
                        <h3 class="panel-title">Horários (favor utilizar padrão 24h)</h3>
                    </div>
                    <div id="horarios" class="panel-body">
                        <div id="clonedInput1" class="clonedInput" style="text-align: center; margin:auto; width: 50%; padding: 5px; border-radius: 5px; margin-bottom: 10px; border: 1px solid #77ba94;">
                            <div class="actions" style="margin-bottom: 2px; margin-top: 2px;">
                                <a class="clone" style="font-size:15px; cursor: pointer; color:#77ba94;"><span class="glyphicon glyphicon-plus"></span> ADICIONAR HORÁRIO</a>
                                <img class="remove" src="~/Images/cross.png" width="16" height="16" border="0" style="cursor: pointer; position: relative; float: right;">
                            </div>
                            <hr />
                            <div class="row" style="padding: 2px;">
                                <div class="col-xs-8 col-sm-6">
                                    <div class="row" style="margin-bottom: 10px;">
                                        <label for="inicio" class="col-sm-3 control-label">Início</label>
                                        <input id="inicio" class="form-control-sm" name="horario_inicio" type="text" size="5" placeholder="hh:mm" pattern="([01]?[0-9]|2[0-3]):[0-5][0-9]" />
                                    </div>
                                    <div class="row">
                                        <label for="fim" class="col-sm-3 control-label">Fim</label>
                                        <input id="fim" class="form-control-sm" name="horario_fim" type="text" size="5" placeholder="hh:mm" pattern="([01]?[0-9]|2[0-3]):[0-5][0-9]" />
                                    </div>
                                </div>
                                <div class="col-xs-8 col-sm-6" style="width: 220px; float:left; margin-left: 0px;">
                                    <label for="fim" class="control-label">Descrição</label>
                                    <input id="fim" class="form-control" name="descricao" type="text" placeholder="DESCRIÇÃO" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
            <div class="text-right">
                @Html.ActionLink(" Voltar ", "Index", "Home", new { @class = "btn btn-danger" , style="margin-right:10px"}) 
                <input type="submit" value="Efetivar Cadastro" class="btn btn-primary" style="margin: 5 auto; float: right;">
            </div>
           
        </div>
    </div>
}

<script type="text/javascript">
    (function ($) {
        $(document).ready(function () {
            // validar e-mail
            function validateEmail(email) {
                var re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                return re.test(email);
            }

            $("#Email").on("change", function () {
                if (!validateEmail($("#Email").val())) {
                    $("#resultEmail").text("E-mail inválido!");
                } else {
                    $("#resultEmail").text("");
                }
            })

            // mascaras

            $('#CNPJ').mask('99.999.999/9999-99');
            $('#Telefone').mask("(99) 9999-99999");
            $('#Telefone').change(function (event) { // mascara dinamica
                var target, phone, element;
                target = (event.currentTarget) ? event.currentTarget : event.srcElement;
                phone = target.value.replace(/\D/g, '');
                element = $(target); element.unmask();
                if (phone.length > 10) {
                    element.mask("(99) 99999-9999");
                }
                else {
                    element.mask("(99) 9999-99999");
                }
            });

            $('#Telefone2').mask("(99) 9999-99999");
            $('#Telefone2').change(function (event) { // mascara dinamica
                var target, phone, element;
                target = (event.currentTarget) ? event.currentTarget : event.srcElement;
                phone = target.value.replace(/\D/g, '');
                element = $(target); element.unmask();
                if (phone.length > 10) {
                    element.mask("(99) 99999-9999");
                }
                else {
                    element.mask("(99) 9999-99999");
                }
            });

            $("#CEP").mask("99.999-999");


        });
    })(jQuery);
</script>