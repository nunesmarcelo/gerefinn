@model GerenciadorFinanceiro.Models.produto

@{
    ViewBag.Title = "Produto";
	ViewBag.TituloPagina = "Edição de Produto";
	Layout = null;
}

<!-- <h2>Edit</h2> 
<h2>produto</h2> -->

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Editar  Produto  </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
		@using (Html.BeginForm("Edit" , "Produto" , FormMethod.Post)) 
		{
			@Html.AntiForgeryToken()
				
			<fieldset class="scheduler-border  mt-4 col-12  ">
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group row">
					@Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
					<div class="col-md-7">
				
						@Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control" , @required = true } })
						@Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
					</div>
			  </div>

				<div class="form-group row">
					@Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
					<div class="col-md-7">
				
						@Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" , @required = true } })
						@Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
					</div>
			  </div>

				<div class="form-group row">
					@Html.LabelFor(model => model.valorunitario, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
					<div class="col-md-7">
				
						@Html.EditorFor(model => model.valorunitario, new { htmlAttributes = new { @class = "form-control" , @required = true } })
						@Html.ValidationMessageFor(model => model.valorunitario, "", new { @class = "text-danger" })
					</div>
			  </div>

				<div class="form-group row">
					@Html.LabelFor(model => model.custounitario, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
					<div class="col-md-7">
				
						@Html.EditorFor(model => model.custounitario, new { htmlAttributes = new { @class = "form-control" , @required = true } })
						@Html.ValidationMessageFor(model => model.custounitario, "", new { @class = "text-danger" })
					</div>
			  </div>

				<div class="form-group row">
					@Html.LabelFor(model => model.estoqueminimo, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
					<div class="col-md-7">
				
						@Html.EditorFor(model => model.estoqueminimo, new { htmlAttributes = new { @class = "form-control" , @required = true } })
						@Html.ValidationMessageFor(model => model.estoqueminimo, "", new { @class = "text-danger" })
					</div>
			  </div>

				<div class="form-group row">
					@Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-5 col-sm-12 " })
					<div class="col-md-7">
			
						<div class="checkbox">				
							<label class="quadrado">
								@Html.EditorFor(model => model.status ,  new { htmlAttributes = new { @class = "form-control" } })
								<span class="checkmark"></span>
							</label>
						@Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
					</div>
									</div>
			  </div>

			</fieldset>
			<div class="modal-footer">
				<button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancelar</button>
				<button type="submit" value="Save" class="btn btn-outline-success">Salvar</button>
			</div>
			}
		</div>
	</div>

<script type="text/javascript">

	$('#valor').on('keyup', function () {

        var v = $("#valor").val();
        v = v.replace(/\D/g, "");
        v = new String(Number(v));
        var len = v.length;
        if (1 == len)
            v = v.replace(/(\d)/, "0,0$1");
        else if (2 == len)
            v = v.replace(/(\d)/, "0,$1");
        else if (len > 2) {
            v = v.replace(/(\d{2})$/, ',$1');
        }
        $("#valor").val(v);
    });

    $('#valor2').on('keyup', function () {

        var v = $("#valor2").val();
        v = v.replace(/\D/g, "");
        v = new String(Number(v));
        var len = v.length;
        if (1 == len)
            v = v.replace(/(\d)/, "0,0$1");
        else if (2 == len)
            v = v.replace(/(\d)/, "0,$1");
        else if (len > 2) {
            v = v.replace(/(\d{2})$/, ',$1');
        }
        $("#valor2").val(v);
    });

    $('#CNPJ').mask('99.999.999/9999-99');
    $('#Telefone').mask("(99) 9999-99999");
    $('#Telefone').change(function (event) { // mascara dinamica
        var target, phone, element;
        target = (event.currentTarget) ? event.currentTarget : event.srcElement;
        phone = target.value.replace(/\D/g, '');
        element = $(target); element.unmask();
        if (phone.length > 10) {
            element.mask("(99) 99999-9999");
        }
        else {
            element.mask("(99) 9999-99999");
        }
    });

    $('#Telefone2').mask("(99) 9999-99999");
    $('#Telefone2').change(function (event) { // mascara dinamica
        var target, phone, element;
        target = (event.currentTarget) ? event.currentTarget : event.srcElement;
        phone = target.value.replace(/\D/g, '');
        element = $(target); element.unmask();
        if (phone.length > 10) {
            element.mask("(99) 99999-9999");
        }
        else {
            element.mask("(99) 9999-99999");
        }
    });


    $("#cep").mask("99.999-999");
</script>


